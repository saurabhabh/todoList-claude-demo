enum TaskStatus {
  PENDING
  COMPLETED
}

type Task {
  id: Int!
  title: String!
  description: String
  status: TaskStatus!
  createdAt: String!
  updatedAt: String!
}

input CreateTaskInput {
  title: String!
  description: String
}

input UpdateTaskStatusInput {
  id: Int!
  status: TaskStatus!
}

type TaskPayload {
  task: Task
  errorMessage: String
  success: Boolean!
}

type Query {
  hello: String!
  allTasks: [Task!]!
  taskById(id: Int!): Task
  tasksByStatus(status: TaskStatus!): [Task!]!
}

type Mutation {
  placeholder: String!
  createTask(input: CreateTaskInput!): TaskPayload!
  updateTaskStatus(input: UpdateTaskStatusInput!): TaskPayload!
  deleteTask(id: Int!): TaskPayload!
}